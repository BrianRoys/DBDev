{"name":"DBDev","tagline":"Data Base Development tool","body":"### DBDev\r\nDBDev aids in the maintinance of databases through the software development\r\nlife cycle by automating what is normally error prone manual work.\r\n\r\n## The problem:\r\nSoftware development almost always involves a database. Done properly there should be a separate \r\nserver for each phase: DEV, QA, UAT and PROD. Changes to DEV need to propagate to the others and\r\nthat is the problem: How to know what changes have been made to which servers and which haven't.\r\n\r\n## Solution:\r\nStored Procedures, Views, Triggers and Functions need be created as script files, stored under \r\nthe project folder (e.g. \"c:\\myProject\\DB\\Procs\"). Then to update or synchronize a server just \r\nrun all the scripts. It can be managed as a manual process but is only workable where there are\r\nonly a few scripts.\r\n\r\nAll (and I do mean ALL) DDL commands (creating, altering, dropping of the tables and indexes) \r\nshould be performed as sequentially named script files also stored in a folder under the project \r\nfolder (e.g. \"c:\\myProject\\DB\\Deltas\"). Include everything as scripts: create a table, add a \r\ncolumn to that table, drop that column, add an index to that table, change the index, etc. By\r\nscripting all the deltas you can create the whole database; just run the sequence. One good \r\nway is to date each change file (e.g. 20160322A.sql). Also, include in the database a table\r\nof all the scripts that have been run on this database so you can track what has and hasn't \r\nbeen run.\r\n\r\n## DBDev handles all this (and more) for you: \r\n  1) If the database doesn't exist it creates it.\r\n  2) If the deltas table doesn't exist it creates it.\r\n  3) It compares the list of files in the deltas folder with the deltas table and runs, \r\n  in order, the un-run scripts and adds them to the table.\r\n  4) It runs all the scripts in the procs folder to refresh the stored procedures.\r\n\r\n## Required Parameters:\r\n  1) Connection string to the database.\r\n  2) Name of the database (it doesn't need to exist on the given server yet).\r\n  3) Path to the project (under which the db folder resides).\r\n\r\n## Options:\r\n*NoWait                Don't wait for keystroke after run is finished.\r\n*DeltaTable=_Delta     Name to store the delta scripts that have been run already.\r\n*DBDir=DB              The sub-dir under the ProjectDir where the scripts persist.\r\n*DeltaDir=Delta        The sub-dir under the DBDir where the delta scripts are stored.\r\n*ProcDir=Proc          The sub-dir under the DBDir where the stored procedure scripts are stored.\r\n*DeltasOnly|ProcsOnly  Either process just the deltas or just the stored procedure scripts.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}